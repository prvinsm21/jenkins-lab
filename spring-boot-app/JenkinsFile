pipeline{
    agent{
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages{
        stage('Checkout'){
            steps{
                sh 'echo Passed'
            }
        }
        stage('Build and Test'){
            steps{
                sh 'ls -ltr'
                sh 'cd /app/jenkins-lab/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis'){
            environment {
                SONAR_URL = "http://192.168.29.188:9000"
            }
            steps{
                withCredentials([string(credentialsId:'sonarqube', variable:'SONAR_AUTH_TOKEN')]){
                    sh 'cd /app/jenkins-lab/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "prvinsm21/ultimate-cicd:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps{
                script{
                    sh 'cd /app/jenkins-lab/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("$DOCKER_IMAGE")
                    docker.withRegistry('https://index.docker.io/v1/',"docker-cred"){
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "jenkins-lab"
            GIT_USER_NAME = "prvinsm21"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "prvinsm21.xyz@gmail.com"
                    git config user.name "Macko"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
    }
}